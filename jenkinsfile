pipeline {
  agent {
    kubernetes {
      label 'python-agent'
      yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: python
    image: python:3.8-slim
    command:
    - cat
    tty: true
  restartPolicy: Never
"""
    }
  }

  environment {
    VENV_DIR = 'unit_testing_bd'
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Setup Python Environment') {
      steps {
        container('python') {
          sh '''
            python3 -m venv $VENV_DIR
            . $VENV_DIR/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt
          '''
        }
      }
    }

stage('Run Unit Tests') {
  steps {
    container('python') {
      sh '''
        . $VENV_DIR/bin/activate
        cd data_ingestion_postgres/src
        export PYTHONPATH=$(pwd)
        pytest --cache-clear
        pytest test_etl_to_postgres.py --junitxml=../../test-results.xml
      '''
    }
  }
}

    stage('Publish Test Results') {
      steps {
        junit 'test-results.xml'
      }
    }
  }

  post {
    always {
      script {
        // Make files writable to avoid permission issues, then delete everything safely
        sh '''
          echo "Making workspace writable to avoid permission errors..."
          chmod -R u+w .

          echo "Deleting workspace except .pytest_cache..."
          find . -name ".pytest_cache" -prune -o -exec rm -rf {} + || true
        '''
      }
    }
  }
}
