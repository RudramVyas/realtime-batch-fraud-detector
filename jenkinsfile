pipeline {
  agent {
    kubernetes {
      label 'python-agent'
      yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: python
    image: python:3.8-slim
    command:
    - cat
    tty: true
  restartPolicy: Never
"""
    }
  }

  environment {
    VENV_DIR = 'unit_testing_bd'
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Setup Python Environment') {
      steps {
        container('python') {
          sh '''
            python3 -m venv $VENV_DIR
            . $VENV_DIR/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt
          '''
        }
      }
    }

    stage('Run Unit Tests') {
      steps {
        container('python') {
          sh '''
            . $VENV_DIR/bin/activate
            cd data_ingestion_postgres/src
            export PYTHONPATH=$(pwd)
            mkdir -p test-reports
            pytest --cache-clear
            pytest test_etl_to_postgres.py --junitxml=test-results.xml
          '''
        }
      }
    }

    stage('Fix Permissions') {
      steps {
        container('python') {
          sh '''
            echo "Making workspace writable..."
            chmod -R u+w ../../
          '''
        }
      }
    }

    stage('Publish Test Results') {
      steps {
        junit 'data_ingestion_postgres/src/test-results.xml'
      }
    }

    stage('Push Test Results to GitHub') {
      steps {
        container('python') {
          withCredentials([usernamePassword(credentialsId: 'github-creds', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASS')]) {
            sh '''
              cd data_ingestion_postgres/src
              git config --global user.email "jenkins@example.com"
              git config --global user.name "Jenkins CI"
              git remote set-url origin https://${GIT_USER}:${GIT_PASS}@github.com/your_org_or_user/your_repo.git
              git add test-reports/test-results.xml
              git commit -m "Add test results from Jenkins"
              git push origin dev_testing
            '''
          }
        }
      }
    }
  }

  post {
    always {
      script {
        sh '''
          echo "Cleaning pytest and Python cache folders to avoid permission issues..."
          rm -rf data_ingestion_postgres/src/.pytest_cache || true
          find data_ingestion_postgres/src -type d -name "__pycache__" -exec rm -rf {} + || true
        '''
      }
    }
  }
}
